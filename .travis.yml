language: cpp

matrix:
  include:
    - os: osx
      osx_image: xcode6.4
      env: COMPILER='clang++'
    - os: osx
      osx_image: xcode7
      env: COMPILER='clang++'
    - os: osx
      osx_image: xcode9.2
      env: COMPILER='clang++'
    - env: COMPILER=g++-4.9 COVERAGE=coverage GCOV=gcov-4.9
      addons:
        apt:
          packages: ['g++-4.9']
          sources: ['ubuntu-toolchain-r-test']
    - env: COMPILER=g++-5
      addons:
        apt:
          packages: ['g++-5']
          sources: ['ubuntu-toolchain-r-test']
    - env: COMPILER=g++-6
      addons:
        apt:
          packages: ['g++-6']
          sources: ['ubuntu-toolchain-r-test']
    - env: COMPILER=g++-7
      addons:
        apt:
          packages: ['g++-7']
          sources: ['ubuntu-toolchain-r-test']
    - env: COMPILER='clang++-3.9'
      addons:
        apt:
          packages: ['clang-3.9']
    - env: COMPILER='clang++-4.0'
      addons:
        apt:
          packages: ['clang-4.0']
          sources: ['llvm-toolchain-trusty-4.0']
    - env: COMPILER='clang++-5.0'
      addons:
        apt:
          packages: ['clang-5.0']
          sources: ['llvm-toolchain-trusty-5.0']
    - env: COMPILER='clang++-6.0'
      addons:
        apt:
          packages: ['clang-6.0']
          sources: ['llvm-toolchain-trusty']

before_install:
  - cmake --version
  - g++ --version
  - clang++ --version
  - if [ $TRAVIS_OS_NAME == linux ]; then
    apt-cache search "clang" | egrep "^clang-[0-9\.]+ ";
    apt-cache search "g++" | egrep "^g\+\+-[0-9\.]+ ";
    fi

install:
  - if test -n "$COVERAGE"; then pip install --user cpp-coveralls; fi
  # not necessary aymore, cmake is modern
  # - if [ $TRAVIS_OS_NAME == osx ]; then brew update > /dev/null ; brew upgrade cmake; fi

before_script:
  - export CXX=$COMPILER

script:
  - mkdir cmake-build; cd cmake-build
  - cmake .. -DCMAKE_CXX_COMPILER=$CXX -DCOVERAGE=$COVERAGE
  - make VERBOSE=1 $COVERAGE
  - make all $COVERAGE
  - cd ..

after_success:
  - if test -n "$COVERAGE"; then coveralls --verbose --gcov-options '\-lp' --gcov '$GCOV' -E cmake-build/CMakefiles; fi
